{"version":3,"sources":["firebase/FbConfig.js","service/FbServices.js","service/puzzleDataHandler.js","components/UI-components/Button.js","view/Home.js","assets/house.png","components/puzzle/PuzzleImage.js","components/puzzle/Timer.js","components/puzzle/Results.js","components/puzzle/ResultsAlert.js","assets/user.jpg","components/puzzle/Puzzle.js","App.js","reportWebVitals.js","index.js"],"names":["initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","db","getFirestore","addNewPlayer","nickname","a","addDoc","collection","docRef","id","console","error","addNewGameResult","userId","level","time","image","doc","getDoc","data","newData","results","updateDoc","getAllResults","shuffleArray","array","i","length","j","Math","floor","random","temp","calculateBackgroundWidth","width","index","parseInt","calculateBackgroundHeight","height","createPuzzlePieces","test","pow","push","correctPosition","checkImage","imageSrc","good","bad","img","Image","onload","onerror","src","puzzleLevels","value","text","cleanPuzzleData","localStorage","removeItem","Button","onClickHandler","rest","onClick","MySwal","withReactContent","Swal","Home","useState","setLevel","disabled","setDisabled","isValidImage","setIsValidImage","getItem","setNickname","puzzleImageURL","setPuzzleImageURL","navigate","useNavigate","handleSubmit","e","preventDefault","setItem","continuePreviousGame","useCallback","close","clearPreviousGame","useEffect","setTimeout","fire","title","icon","html","className","showCloseButton","showCancelButton","focusConfirm","showConfirmButton","onSubmit","htmlFor","type","placeholder","onChange","target","required","map","PuzzleImage","part","updateBoxesOrder","pieceToShuffle","setPieceToShuffle","pieceStyle","objectFit","backgroundImage","backgroundSize","backgroundPosition","float","borderRadius","style","classList","toggle","Timer","playTime","setPlayTime","updatePlayTime","prevPlayTime","timeout","clearTimeout","memo","Results","result","alt","ResultsAlert","finishGame","restartGame","res","Puzzle","useParams","lvl","split","showOriginalImage","setShowOriginalImage","JSON","parse","boxes","setBoxes","blockWidth","blockHeight","order","box","isCompleted","checkCompleted","username","piece","newOrder","stringify","newBoxes","customClass","then","getResults","imageUrl","allowOutsideClick","log","to","user","display","gridTemplateColumns","gap","placeItems","App","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.50891880.chunk.js","sourcesContent":["import { initializeApp } from \"firebase/app\";\r\nimport { getFirestore } from \"firebase/firestore\"\r\n\r\n initializeApp({\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_APP_ID\r\n});\r\n\r\n\r\nconst db  = getFirestore();\r\n\r\nexport default db;\r\n\r\n","import { addDoc, collection, doc, updateDoc, getDoc } from \"firebase/firestore\";\r\nimport db from \"../firebase/FbConfig\";\r\n\r\n\r\n\r\n\r\nexport const addNewPlayer = async nickname => {\r\n    \r\n    try {\r\n            const docRef =  await addDoc(collection(db, \"users\"), {\r\n                nickname\r\n              });\r\n              return docRef.id\r\n\r\n      } catch (e) {\r\n        console.error(\"Error adding document: \", e);\r\n      }\r\n}\r\n\r\nexport const addNewGameResult = async (userId, level, time, image) => {\r\n    \r\n    try{\r\n        const docRef = doc(db, \"users\", userId);\r\n        const data = await getDoc(docRef);\r\n        const newData = data.data().results ? [...data.data().results, { level, time, image}] : [{ level, time, image}];\r\n        await updateDoc(docRef, {\r\n            results: [\r\n               ...newData\r\n              \r\n            ]\r\n          });\r\n    } catch (e) {\r\n        console.error(\"Error adding document: \", e);\r\n      }\r\n}\r\n\r\nexport const getAllResults = async userId => {\r\n    try{\r\n        const docRef = doc(db, \"users\", userId);\r\n        const data = await getDoc(docRef);\r\n        return data.data()?.results\r\n    } catch (e) {\r\n        console.error(\"Error adding document: \", e);\r\n      }\r\n}","/** Change order of puzzle pieces */\r\nexport function shuffleArray(array) {\r\n    for (let i = array.length - 1; i > 0; i--) {\r\n        let j = Math.floor(Math.random() * (i + 1));\r\n        let temp = array[i];\r\n        array[i] = array[j];\r\n        array[j] = temp;\r\n    }\r\n    return array;\r\n}\r\n\r\n/** Get correct width for puzzle piece */\r\nexport const calculateBackgroundWidth = (width, level, index) => {\r\n    \r\n    return index !== 0 && index % parseInt(level) !== 0 ? width * (index % parseInt(level)) : 0; \r\n}\r\n\r\nexport const calculateBackgroundHeight = (height, level, index) => {\r\n    \r\n    return index < 3 ? 0 : Math.floor(index / parseInt(level)) * height  \r\n}\r\n\r\n/** Get correct height for puzzle piece */\r\nexport const checkCompleted = (array) => {\r\n    for(let i=0; i<array.length; i++){\r\n        if(i !== parseInt(array[i])){\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n\r\n/** Create array for puzzle pieces with correct positions  */\r\nexport const createPuzzlePieces = (level) => {\r\n    const test = [];\r\n        for(let i=0; i < Math.pow(parseInt(level), 2); i++){\r\n            test.push({\r\n                correctPosition: i\r\n            });\r\n        }\r\n        return shuffleArray(test);\r\n}\r\n\r\n/** Check if image url is valid */\r\nexport function checkImage(imageSrc, good, bad) {\r\n    let img = new Image();\r\n    img.onload = good; \r\n    img.onerror = bad;\r\n    img.src = imageSrc;\r\n}\r\n\r\n/** Initialize puzzle levels */\r\nexport const puzzleLevels = [\r\n    { value: \"3x3\", text: \"3X3\" },\r\n    { value: \"4x4\", text: \"4X4\" },\r\n    { value: \"6x6\", text: \"6X6\" },\r\n    { value: \"8x8\", text: \"8X8\" },\r\n    { value: \"12x12\", text: \"12X12\" },\r\n    { value: \"16x16\", text: \"16X16\" },\r\n    { value: \"20x20\", text: \"20X20\" }\r\n];\r\n\r\n/** Reset puzzle data */\r\nexport const cleanPuzzleData = () => {\r\n    localStorage.removeItem(\"puzzleLevel\");\r\n    localStorage.removeItem(\"puzzlePlayTime\");\r\n    localStorage.removeItem(\"puzzle\");\r\n    localStorage.removeItem(\"puzzleImage\");\r\n}\r\n","import React from 'react'\r\n\r\nconst Button = ({ onClickHandler, text, ...rest }) => {\r\n    return <button onClick={onClickHandler} {...rest}>{text}</button>\r\n}\r\n\r\nexport default Button\r\n","import React, { useCallback, useEffect, useState } from 'react'\r\nimport { useNavigate } from 'react-router';\r\n\r\n/** Packages */\r\nimport Swal from 'sweetalert2';\r\nimport withReactContent from 'sweetalert2-react-content'\r\nimport { addNewPlayer } from '../service/FbServices';\r\n\r\n/** Services */\r\nimport { checkImage, cleanPuzzleData, puzzleLevels } from '../service/puzzleDataHandler';\r\n\r\n/** UI Components */\r\nimport Button from '../components/UI-components/Button';\r\n\r\nconst MySwal = withReactContent(Swal); // Initialize Sweet Alert\r\n\r\nconst Home = () => {\r\n\r\n    const [level, setLevel] = useState(\"\");\r\n    const [disabled, setDisabled] = useState(false);\r\n    const [isValidImage, setIsValidImage] = useState(null);\r\n    const [nickname, setNickname] = useState(localStorage.getItem(\"nickname\") || \"\");\r\n    const [puzzleImageURL, setPuzzleImageURL] = useState(\"\");\r\n    const navigate = useNavigate();\r\n\r\n    const handleSubmit = async e => {\r\n        e.preventDefault();\r\n        if(nickname !== \"\"){\r\n            setDisabled(true);\r\n            if(!localStorage.getItem(\"userId\") || nickname !== localStorage.getItem(\"nickname\")){\r\n                const id = await addNewPlayer(nickname);\r\n                localStorage.setItem(\"nickname\", nickname);\r\n                localStorage.setItem(\"userId\", id);\r\n            }\r\n            setDisabled(false);\r\n        }\r\n        if(puzzleImageURL !== \"\"){\r\n            checkImage(puzzleImageURL, () => { \r\n                localStorage.setItem(\"puzzleImage\", puzzleImageURL);  \r\n                navigate(`/${level}`); \r\n            },\r\n         () => setIsValidImage(\"Oops Image isn't valid!\") );\r\n        }\r\n        \r\n        if(!localStorage.getItem(\"puzzleImage\") &&  puzzleImageURL === \"\"){\r\n            navigate(`/${level}`);\r\n        }\r\n        // \r\n    };\r\n\r\n    /** Restore previous game */\r\n    const continuePreviousGame = useCallback(\r\n        () => {\r\n            navigate(`/${localStorage.getItem(\"puzzleLevel\")}x${localStorage.getItem(\"puzzleLevel\")}`);\r\n            MySwal.close();\r\n        },\r\n        [navigate],\r\n    );\r\n\r\n    /** Clear previous game */\r\n    const clearPreviousGame = () => {\r\n\r\n        cleanPuzzleData();\r\n        MySwal.close();\r\n    };\r\n\r\n    useEffect(() => {\r\n        if(localStorage.getItem(\"puzzleLevel\")){\r\n            setTimeout(() => MySwal.fire(\r\n                {\r\n                    title: '<strong>Welcome Back!</strong>',\r\n                    icon: 'question',\r\n                    html: <> \r\n                             <p>Do you wish to continue to your previous game?</p>\r\n                             <Button text=\"Continue\" className=\"start-button mx-2\" onClickHandler={continuePreviousGame} />\r\n                             <Button text=\"Start New\" className=\"start-button mx-2\" onClickHandler={clearPreviousGame} />\r\n                          </>,\r\n                    \r\n                    showCloseButton: false,\r\n                    showCancelButton: false,\r\n                    focusConfirm: false,\r\n                    showConfirmButton: false\r\n                }), 800)\r\n        }\r\n\r\n        return () => {\r\n            setIsValidImage(null);\r\n        }\r\n    \r\n    }, [continuePreviousGame])\r\n    \r\n\r\n    return (\r\n        <div className=\"container-fluid min-vh-100 d-flex flex-column justify-content-center home\">\r\n            <div className=\"w-50 mx-auto\">\r\n             <div className=\"d-flex flex-column align-items-center text-white puzzle-intro py-5\">\r\n                <p className=\"display-5 text-light text-center pb-3 puzzle-title\">Image Puzzle</p>\r\n                <form onSubmit={handleSubmit} className=\"w-50\">\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                    <div className=\"w-100\">\r\n                        <label htmlFor=\"nickname\">Pick nickname</label>\r\n                        <input \r\n                            type=\"text\" \r\n                            className=\"form-control mb-3\"\r\n                            value={nickname} \r\n                            id=\"nickname\" \r\n                            placeholder=\"Very creative nickname\"\r\n                            onChange={(e) =>setNickname(e.target.value)} />\r\n\r\n                        <label htmlFor=\"customImage\">Insert image URL</label>\r\n                        <input \r\n                            type=\"search\" \r\n                            className=\"form-control mb-3\"\r\n                            value={puzzleImageURL} \r\n                            id=\"customImage\" \r\n                            placeholder=\"example.com/image.png\"\r\n                            onChange={(e) =>setPuzzleImageURL(e.target.value)} />\r\n                        {\r\n                            isValidImage && <p className=\"text-dark fw-bold\">{isValidImage}</p>\r\n                        }\r\n\r\n                        <label htmlFor=\"level\">Choose Level</label>\r\n                        <select \r\n                            className=\"form-control mb-3\" \r\n                            value={level}\r\n                            id=\"level\" \r\n                            required \r\n                            onChange={(e) => setLevel(e.target.value)}>\r\n                            <option value=\"\"></option>\r\n                            {\r\n                                puzzleLevels.map(level => <option value={level.value} key={level.value}>{level.text}</option>)\r\n                            }\r\n                        </select>\r\n\r\n                    </div>\r\n                        <Button \r\n                            text={\"Start Game\"} \r\n                            className={`start-button mt-5 ${disabled ? \"disabled\" : \"\"}`} \r\n                            disabled={disabled}></Button>\r\n                    </div>\r\n                </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","export default __webpack_public_path__ + \"static/media/house.1b8ad546.png\";","import React from 'react'\r\n\r\n/** Services */\r\nimport { calculateBackgroundHeight, calculateBackgroundWidth } from '../../service/puzzleDataHandler';\r\n\r\n/** Assets */\r\nimport image from '../../assets/house.png'\r\n\r\nconst PuzzleImage = ({ part, updateBoxesOrder, pieceToShuffle, setPieceToShuffle, width, height, index, level }) => {\r\n\r\n    const pieceStyle = {\r\n        width: `${width}px`,\r\n        height: `${height}px`,\r\n        objectFit: \"cover\", \r\n        backgroundImage: localStorage.getItem('puzzleImage') ? \r\n             `url(${localStorage.getItem('puzzleImage')})` : `url(${image})`, \r\n        backgroundSize: \"700px 600px\",\r\n        backgroundPosition: `-${calculateBackgroundWidth(width, level, index)}px -${calculateBackgroundHeight(height, level, index)}px`,\r\n        float: \"left\",\r\n        // border: \"1px solid transparent\",\r\n        borderRadius: \"4px\"\r\n    };\r\n\r\n    \r\n    /** Add focuse style to selected piece */\r\n    const handlePieceFocus = (e) => {\r\n        e.target.classList.toggle('focused')\r\n        if(!pieceToShuffle) {\r\n            setPieceToShuffle(part)\r\n        } else {\r\n            updateBoxesOrder(part);\r\n            setPieceToShuffle(null);\r\n        }\r\n\r\n    }\r\n    \r\n    \r\n    return (\r\n            <div \r\n                className={`puzzle-piece piece-${index}`}\r\n                style={pieceStyle}\r\n                onClick={handlePieceFocus} \r\n            ></div>\r\n    )\r\n}\r\n\r\nexport default PuzzleImage;\r\n","import React, { memo, useEffect, useCallback } from 'react'\r\n\r\nconst Timer = ({ playTime, setPlayTime }) => {\r\n\r\n    const updatePlayTime = useCallback(\r\n        () => {\r\n                setPlayTime((prevPlayTime) => prevPlayTime + 1);\r\n                    localStorage.setItem(\"puzzlePlayTime\", playTime);\r\n               \r\n                 \r\n        },\r\n        [playTime, setPlayTime],\r\n    )\r\n    useEffect(() => {\r\n        const timeout = setTimeout(() => {\r\n            updatePlayTime();\r\n        }, 1000);\r\n\r\n        \r\n\r\n        return () => clearTimeout(timeout);\r\n        \r\n    }, [updatePlayTime])\r\n    \r\n    return (\r\n        <span className=\"d-flex align-items-center bg-secondary px-3 text-white rounded\">\r\n          {playTime}\r\n        </span>\r\n    )\r\n}\r\n\r\nexport default memo(Timer)\r\n","import React from 'react'\r\n\r\nconst Results = ({ result }) => {\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"row justify-content-center pt-3\">\r\n                      <div className=\"col-lg-3 d-flex justify-content-center align-items-center\">\r\n                        <span>{result.level}</span>\r\n                      </div>\r\n                      <div className=\"col-lg-3 d-flex justify-content-center align-items-center\">\r\n                      <span>{result.time}</span>\r\n                      </div>\r\n                      <div className=\"col-lg-3\">\r\n                      <img src={result.image} className=\"result-image\" alt=\"puzzle\" />\r\n                      </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Results\r\n","import React from 'react'\r\n\r\n/** UI components */\r\nimport Button from '../UI-components/Button'\r\n\r\n/** Components */\r\nimport Results from './Results'\r\n\r\nconst ResultsAlert = ({ time, results, finishGame, restartGame }) => {\r\n    return (\r\n        <div className=\"overflow-hidden\">\r\n          <p>Total Time {time} seconds.</p>\r\n          <p className=\"text-info\">Your Results</p>\r\n          <div className=\"row justify-content-center pb-2\">\r\n            <div className=\"col-lg-3\">\r\n              Level\r\n            </div>\r\n            <div className=\"col-lg-3\">\r\n              Time\r\n            </div>\r\n            <div className=\"col-lg-3\">\r\n              Image\r\n            </div>\r\n          {\r\n            results && results.map((res, index) => {\r\n              return <Results result={res} key={index} />\r\n            })\r\n          }\r\n          </div>\r\n          <Button text=\"Home\" className=\"start-button\" onClickHandler={finishGame} />\r\n          <Button text=\"Try again\" className=\"start-button mx-3\" onClickHandler={restartGame} />\r\n         \r\n        </div>\r\n      )\r\n}\r\n\r\nexport default ResultsAlert\r\n","export default __webpack_public_path__ + \"static/media/user.274d479b.jpg\";","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { useParams } from \"react-router\";\r\n\r\n/** Components */\r\nimport PuzzleImage from \"./PuzzleImage\";\r\nimport Timer from \"./Timer\";\r\nimport ResultsAlert from \"./ResultsAlert\";\r\n\r\n/** UI Components */\r\nimport Button from \"../UI-components/Button\";\r\n\r\n/** Packages */\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\n\r\n/** Services */\r\nimport { addNewGameResult, getAllResults } from \"../../service/FbServices\";\r\nimport {\r\n  checkCompleted,\r\n  cleanPuzzleData,\r\n  createPuzzlePieces,\r\n  shuffleArray,\r\n} from \"../../service/puzzleDataHandler\";\r\n\r\n/** Assets */\r\nimport image from \"../../assets/house.png\";\r\nimport user from \"../../assets/user.jpg\"\r\n\r\n\r\nconst MySwal = withReactContent(Swal); // Initialize Sweet Alert\r\n\r\nconst Puzzle = () => {\r\n\r\n  const navigate = useNavigate();\r\n  const { lvl } = useParams();\r\n  const level = lvl.split(\"x\")[0];\r\n\r\n  const [pieceToShuffle, setPieceToShuffle] = useState(null);\r\n  const [showOriginalImage, setShowOriginalImage] = useState(false);\r\n  const [playTime, setPlayTime] = useState(parseInt(localStorage.getItem(\"puzzlePlayTime\")) || 1);\r\n  const [boxes, setBoxes] = useState(JSON.parse(localStorage.getItem(\"puzzle\")) || createPuzzlePieces(level));\r\n\r\n\r\n  const blockWidth = 700 / parseInt(level);  // Calculate width of puzzle piece\r\n  const blockHeight = 600 / parseInt(level); // Calculate height of puzzle piece\r\n  const order = boxes.map((box) => box.correctPosition); // Get order of pieces \r\n\r\n  const isCompleted = checkCompleted(order); // Check if game is finished\r\n  const username = localStorage.getItem(\"nickname\") || null; // Set user nickname from localstorage\r\n  const userId = localStorage.getItem(\"userId\"); // Set firestore userId from localstorage \r\n  const time = localStorage.getItem(\"puzzlePlayTime\") || 1; // Set puzzle play time from localstorage\r\n\r\n\r\n  /** Handle puzzle pieces swap */\r\n  const updateBoxesOrder = (piece) => {\r\n    const newOrder = [];\r\n    boxes.map((box) => {\r\n      if (box.correctPosition === piece.correctPosition) {\r\n        return newOrder.push(pieceToShuffle);\r\n      } else if (box.correctPosition === pieceToShuffle.correctPosition) {\r\n        return newOrder.push(piece);\r\n      } else {\r\n        return newOrder.push(box);\r\n      }\r\n    });\r\n    localStorage.setItem(\"puzzle\", JSON.stringify(newOrder));\r\n    setBoxes(newOrder);\r\n    \r\n  };\r\n\r\n  /** Finish game handler */\r\n  const finishGame = useCallback(\r\n      () => {\r\n        cleanPuzzleData();\r\n        navigate(\"/\");\r\n        MySwal.close();\r\n      },\r\n      [navigate],\r\n  );\r\n\r\n  /** Restart Game handler */\r\n  const restartGame = useCallback(() => {\r\n    const newBoxes = createPuzzlePieces(parseInt(level));\r\n    localStorage.removeItem(\"puzzle\");\r\n    setBoxes(shuffleArray(newBoxes));\r\n    setPlayTime(1);\r\n    MySwal.close();\r\n  }, [level]);\r\n\r\n  /** Show original image */\r\n  const toggleOriginalImage = () => {\r\n    setShowOriginalImage(true);\r\n    setPlayTime((prevPlayTime) => prevPlayTime + 10);\r\n  };\r\n\r\n  /** Save game level */\r\n  useEffect(() => {\r\n    if(level !== localStorage.getItem(\"puzzleLevel\")){\r\n      localStorage.setItem(\"puzzleLevel\", level); \r\n    setBoxes(createPuzzlePieces(level));\r\n    setPlayTime(1);\r\n    }\r\n    \r\n    \r\n    return  () => {\r\n        cleanPuzzleData();\r\n    }\r\n  }, [level]);\r\n\r\n  useEffect(() => {\r\n    if (showOriginalImage) {\r\n      MySwal.fire({\r\n        title: \"<strong>This will cost you extra 10 seconds.</strong>\",\r\n        icon: false,\r\n        html: (\r\n          <div className=\"original-image-container\">\r\n            <img\r\n              src={localStorage.getItem(\"puzzleImage\") || image}\r\n              alt=\"original\"\r\n            />\r\n          </div>\r\n        ),\r\n        showCloseButton: true,\r\n        showCancelButton: false,\r\n        customClass: \"original-image\",\r\n        focusConfirm: false,\r\n        showConfirmButton: false,\r\n      }).then(() => {\r\n        setShowOriginalImage(false);\r\n      });\r\n    }\r\n  }, [showOriginalImage]);\r\n\r\n\r\n\r\n\r\n  /** Get and previous game results from firestore */\r\n  const getResults = useCallback(\r\n    async () => {\r\n      \r\n      const imageUrl = localStorage.getItem(\"puzzleImage\") || image;\r\n      await addNewGameResult(userId, level, time, imageUrl);\r\n      const results = await getAllResults(userId);\r\n      \r\n              MySwal.fire({\r\n                title: \"<strong>Game Finished!</strong>\",\r\n                icon: \"success\",\r\n                html: <ResultsAlert \r\n                        time={time} \r\n                        results={results} \r\n                        finishGame={finishGame} \r\n                        restartGame={restartGame}/>,\r\n                showCloseButton: false,\r\n                showCancelButton: false,\r\n                focusConfirm: false,\r\n                showConfirmButton: false,\r\n                allowOutsideClick: false,\r\n              })\r\n    },\r\n    [userId, finishGame, level, restartGame, time],\r\n  )\r\n\r\n  /** Show results when game is finished */\r\n  useEffect(() => {\r\n    if(isCompleted){\r\n      getResults();\r\n    }\r\n  }, [isCompleted, restartGame, finishGame, playTime, getResults]);\r\n\r\n  console.log(blockHeight, blockWidth, level)\r\n\r\n  \r\n\r\n  return (\r\n    <div className=\"d-flex flex-column align-items-center pb-5\">\r\n      <div className=\"d-flex w-100 justify-content-between py-2 mb-3 rounded-bottom\">\r\n        <div className=\"d-flex align-items-center\">\r\n        \r\n        \r\n        <Link className=\"text-white btn btn-info shadow px-3 mx-3\" to=\"/\">Home</Link>\r\n       </div>\r\n\r\n       { \r\n       !isCompleted ?  \r\n        <div className=\"d-flex align-self-end\">\r\n          <Timer \r\n          playTime={playTime} \r\n          setPlayTime={setPlayTime}\r\n          order={order}\r\n            />\r\n            <Button text=\"Original Picture\" className=\"start-button mx-2\" onClickHandler={toggleOriginalImage} />\r\n        </div>\r\n          :\r\n          null\r\n       }\r\n\r\n       {\r\n          \r\n          username ? \r\n            <div>\r\n            <img src={user} alt=\"user\" id=\"user-logo\" className=\"rounded\" />\r\n            <span className=\"mx-3 lead text-white\">{username}</span>\r\n            </div>\r\n            :\r\n            null\r\n         \r\n        } \r\n        \r\n      </div>\r\n\r\n      <div\r\n        style={{\r\n          display: \"grid\",\r\n          gridTemplateColumns: `repeat(${level}, ${blockWidth}px)`,\r\n          gap: \"10px\",\r\n          placeItems: \"center\",\r\n        }}\r\n      >\r\n        {\r\n        boxes.map((part, index) => {\r\n          return (\r\n            <PuzzleImage\r\n              index={part.correctPosition}\r\n              updateBoxesOrder={updateBoxesOrder}\r\n              part={part}\r\n              level={level}\r\n              width={blockWidth}\r\n              height={blockHeight}\r\n              key={index}\r\n              pieceToShuffle={pieceToShuffle}\r\n              setPieceToShuffle={setPieceToShuffle}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Puzzle;\r\n","import React  from 'react'\nimport { Route, Routes } from 'react-router'\nimport Home from './view/Home'\nimport Puzzle from './components/puzzle/Puzzle'\n\n\nconst App = () => {\n\n  return (\n    <div>\n      <Routes>\n        <Route path=\"/\" element={ <Home /> } />\n        <Route path=\"/:lvl\" element={ <Puzzle /> } />\n      </Routes>\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}